#+BLOG: Unixbhaskar's Blog
#+POSTID: 1959
#+title: How To Run FreeBSD In A Virtual Machine On Different Linux Distributions
#+date: 2025-05-02
#+tags: Technical Linux Opensource Tools qemu FreeBSD OperatingSystem


Alright, time to time I have experimented with stuff that is either not practical
or has some sort of real value in life. The latest being, attempted to run
FreeBSD[fn:1] in a virtual machine(via qemu[fn:2]) sitting on Linux(Various
distributions).

Oh, I have been running FreeBSD on actual slice(meaning, a physical disk partition)
along with other Linux distributions for quite some time.(years!)

Then why this endeavor? I am curious about the outcome and deployment effect of
this practice.

So, What did I do? Let me show my atrociously written script for automating that
damn thing(means, running FreeBSD in a VM) with minimal fuss.

#+BEGIN_SRC bash
#!/usr/bin/env bash
#===============================================================================
#
#          FILE: freebsd_vm.sh
#
#         USAGE: ./freebsd_vm.sh
#
#   DESCRIPTION: Run FreeBSD inside a virtual machine on Linux
#
#       OPTIONS:
#  REQUIREMENTS: qemu FreeBSD-ISO qcow2 images ovmf(for UEFI bios)
#          BUGS: ---
#         NOTES: https://download.freebsd.org/releases/VM-IMAGES/14.2-RELEASE/amd64/Latest/
#        AUTHOR: Bhaskar Chowdhury (https://about.me/unixbhaskar), unixbhaskar@gmail.com
#  ORGANIZATION: Independent
#       CREATED: 04/20/2025 03:55
#      REVISION:  ---
#===============================================================================

set -o nounset                              # Treat unset variables as an error

basepath=/home/bhaskar/FreeBSD

cd $basepath || exit 1

if test "$(uname -n)" == "debian";then
sudo qemu-system-x86_64 -m 4096 -smp 5 -bios /usr/share/ovmf/OVMF.fd -serial mon:stdio -nographic -drive file=FreeBSD-14.2-RELEASE-amd64.qcow2 -enable-kvm
elif test "$(uname -n)" == "Gentoo";then
sudo qemu-system-x86_64 -m 4096 -smp 5 -bios /usr/share/edk2-ovmf/OVMF_CODE.fd -serial mon:stdio -nographic -drive file=FreeBSD-14.2-RELEASE-amd64.qcow2 -enable-kvm
elif test "$(uname -n)" == "ArchLinux";then
sudo qemu-system-x86_64 -m 4096 -smp 5 -bios /usr/share/edk2-ovmf/x64/OVMF.4m.fd -serial mon:stdio -nographic -drive file=FreeBSD-14.2-RELEASE-amd64.qcow2 -enable-kvm
else
	echo Nothing match.
fi


# To exit out of VM you should press these keys : CTRL-A x

# The -m 4096 option indicates the VM should have 4 gigabytes of system memory.

# The -smp 4 option indicates the VM should have 4 CPU cores.

# The -bios /usr/share/ovmf/OVMF.fd option indicates the VM should boot with UEFI.

# The -serial mon:stdio option indicates the VM should use your pseudo terminal as the serial terminal.

# The -nographic option indicates the VM should not have a display.

# The -drive <image> option indicates our VM image to boot.

# The -enable-kvm option indicates the VM should use Linuxâ€™s hardware acceleration.


# steps to follow for running FreeBSD in VM on Linux

# Get the qcow2 image
#
# wget -c  https://download.freebsd.org/releases/VM-IMAGES/14.2-RELEASE/amd64/Latest/FreeBSD-14.2-RELEASE-amd64.qcow2.xz
#

# Install ovmf and qemu-utils by your os package manager


# unxz to downloaded qcow2 image


# qemu-img resize [the downloaded qcow2 img file] +number of gigs to assisgn
# +14g

# Once booten into the vm ,do
# growfs / for expanding the filesystem

#+END_SRC

See! How trivial it gets to get things going! Indeed. And I have clearly
mentioned the steps you need to perform beforehand.

And, the checks could have been much robust than just paltry hostname.

What I have not mentioned in the script info is that you could change the
password of the root or ordinary user once you get in. That's pretty trivial and
one should do that if they have some amount of practical use of this vm.

You need to get a few packages, which are also clearly stated in the script
header and pretty easy to get from the Linux distributions package manager's
repository.

Have fun :)

* Footnotes

[fn:1] [[https://www.freebsd.org/][FreeBSD Website]]

[fn:2] [[https://www.qemu.org/][QEMU website]]
